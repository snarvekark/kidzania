{"ast":null,"code":"(function webpackUniversalModuleDefinition(root, factory) {\n  if (typeof exports === 'object' && typeof module === 'object') module.exports = factory(require(\"amazon-cognito-identity-js\"), require(\"aws-sdk/global\"), require(\"react\"), require(\"react-redux\"));else if (typeof define === 'function' && define.amd) define([\"amazon-cognito-identity-js\", \"aws-sdk/global\", \"react\", \"react-redux\"], factory);else if (typeof exports === 'object') exports[\"ReactCognito\"] = factory(require(\"amazon-cognito-identity-js\"), require(\"aws-sdk/global\"), require(\"react\"), require(\"react-redux\"));else root[\"ReactCognito\"] = factory(root[\"AmazonCognitoIdentity\"], root[\"aws-sdk/global\"], root[\"React\"], root[\"ReactRedux\"]);\n})(this, function (__WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_6__, __WEBPACK_EXTERNAL_MODULE_12__, __WEBPACK_EXTERNAL_MODULE_13__) {\n  return (\n    /******/\n    function (modules) {\n      // webpackBootstrap\n\n      /******/\n      // The module cache\n\n      /******/\n      var installedModules = {};\n      /******/\n\n      /******/\n      // The require function\n\n      /******/\n\n      function __webpack_require__(moduleId) {\n        /******/\n\n        /******/\n        // Check if module is in cache\n\n        /******/\n        if (installedModules[moduleId])\n          /******/\n          return installedModules[moduleId].exports;\n        /******/\n\n        /******/\n        // Create a new module (and put it into the cache)\n\n        /******/\n\n        var module = installedModules[moduleId] = {\n          /******/\n          exports: {},\n\n          /******/\n          id: moduleId,\n\n          /******/\n          loaded: false\n          /******/\n\n        };\n        /******/\n\n        /******/\n        // Execute the module function\n\n        /******/\n\n        modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n        /******/\n\n        /******/\n        // Flag the module as loaded\n\n        /******/\n\n        module.loaded = true;\n        /******/\n\n        /******/\n        // Return the exports of the module\n\n        /******/\n\n        return module.exports;\n        /******/\n      }\n      /******/\n\n      /******/\n\n      /******/\n      // expose the modules object (__webpack_modules__)\n\n      /******/\n\n\n      __webpack_require__.m = modules;\n      /******/\n\n      /******/\n      // expose the module cache\n\n      /******/\n\n      __webpack_require__.c = installedModules;\n      /******/\n\n      /******/\n      // __webpack_public_path__\n\n      /******/\n\n      __webpack_require__.p = \"\";\n      /******/\n\n      /******/\n      // Load entry module and return exports\n\n      /******/\n\n      return __webpack_require__(0);\n      /******/\n    }(\n    /************************************************************************/\n\n    /******/\n    [\n    /* 0 */\n\n    /*!**********************!*\\\n      !*** ./src/index.js ***!\n      \\**********************/\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      'use strict';\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n\n      var _reducers = __webpack_require__(\n      /*! ./reducers */\n      1);\n\n      Object.keys(_reducers).forEach(function (key) {\n        if (key === \"default\" || key === \"__esModule\") return;\n        Object.defineProperty(exports, key, {\n          enumerable: true,\n          get: function get() {\n            return _reducers[key];\n          }\n        });\n      });\n\n      var _actions = __webpack_require__(\n      /*! ./actions */\n      4);\n\n      Object.keys(_actions).forEach(function (key) {\n        if (key === \"default\" || key === \"__esModule\") return;\n        Object.defineProperty(exports, key, {\n          enumerable: true,\n          get: function get() {\n            return _actions[key];\n          }\n        });\n      });\n\n      var _states = __webpack_require__(\n      /*! ./states */\n      3);\n\n      Object.keys(_states).forEach(function (key) {\n        if (key === \"default\" || key === \"__esModule\") return;\n        Object.defineProperty(exports, key, {\n          enumerable: true,\n          get: function get() {\n            return _states[key];\n          }\n        });\n      });\n\n      var _utils = __webpack_require__(\n      /*! ./utils */\n      5);\n\n      Object.keys(_utils).forEach(function (key) {\n        if (key === \"default\" || key === \"__esModule\") return;\n        Object.defineProperty(exports, key, {\n          enumerable: true,\n          get: function get() {\n            return _utils[key];\n          }\n        });\n      });\n\n      var _guard = __webpack_require__(\n      /*! ./guard */\n      7);\n\n      Object.keys(_guard).forEach(function (key) {\n        if (key === \"default\" || key === \"__esModule\") return;\n        Object.defineProperty(exports, key, {\n          enumerable: true,\n          get: function get() {\n            return _guard[key];\n          }\n        });\n      });\n\n      var _auth = __webpack_require__(\n      /*! ./auth */\n      8);\n\n      Object.keys(_auth).forEach(function (key) {\n        if (key === \"default\" || key === \"__esModule\") return;\n        Object.defineProperty(exports, key, {\n          enumerable: true,\n          get: function get() {\n            return _auth[key];\n          }\n        });\n      });\n\n      var _attributes = __webpack_require__(\n      /*! ./attributes */\n      9);\n\n      Object.keys(_attributes).forEach(function (key) {\n        if (key === \"default\" || key === \"__esModule\") return;\n        Object.defineProperty(exports, key, {\n          enumerable: true,\n          get: function get() {\n            return _attributes[key];\n          }\n        });\n      });\n\n      var _policy = __webpack_require__(\n      /*! ./policy */\n      10);\n\n      Object.keys(_policy).forEach(function (key) {\n        if (key === \"default\" || key === \"__esModule\") return;\n        Object.defineProperty(exports, key, {\n          enumerable: true,\n          get: function get() {\n            return _policy[key];\n          }\n        });\n      });\n\n      var _Login = __webpack_require__(\n      /*! ./Login.jsx */\n      11);\n\n      Object.keys(_Login).forEach(function (key) {\n        if (key === \"default\" || key === \"__esModule\") return;\n        Object.defineProperty(exports, key, {\n          enumerable: true,\n          get: function get() {\n            return _Login[key];\n          }\n        });\n      });\n\n      var _Logout = __webpack_require__(\n      /*! ./Logout.jsx */\n      14);\n\n      Object.keys(_Logout).forEach(function (key) {\n        if (key === \"default\" || key === \"__esModule\") return;\n        Object.defineProperty(exports, key, {\n          enumerable: true,\n          get: function get() {\n            return _Logout[key];\n          }\n        });\n      });\n\n      var _NewPasswordRequired = __webpack_require__(\n      /*! ./NewPasswordRequired.jsx */\n      23);\n\n      Object.keys(_NewPasswordRequired).forEach(function (key) {\n        if (key === \"default\" || key === \"__esModule\") return;\n        Object.defineProperty(exports, key, {\n          enumerable: true,\n          get: function get() {\n            return _NewPasswordRequired[key];\n          }\n        });\n      });\n\n      var _EmailVerification = __webpack_require__(\n      /*! ./EmailVerification.jsx */\n      24);\n\n      Object.keys(_EmailVerification).forEach(function (key) {\n        if (key === \"default\" || key === \"__esModule\") return;\n        Object.defineProperty(exports, key, {\n          enumerable: true,\n          get: function get() {\n            return _EmailVerification[key];\n          }\n        });\n      });\n\n      var _PasswordReset = __webpack_require__(\n      /*! ./PasswordReset.jsx */\n      25);\n\n      Object.keys(_PasswordReset).forEach(function (key) {\n        if (key === \"default\" || key === \"__esModule\") return;\n        Object.defineProperty(exports, key, {\n          enumerable: true,\n          get: function get() {\n            return _PasswordReset[key];\n          }\n        });\n      });\n\n      var _Confirm = __webpack_require__(\n      /*! ./Confirm.jsx */\n      26);\n\n      Object.keys(_Confirm).forEach(function (key) {\n        if (key === \"default\" || key === \"__esModule\") return;\n        Object.defineProperty(exports, key, {\n          enumerable: true,\n          get: function get() {\n            return _Confirm[key];\n          }\n        });\n      });\n      /***/\n    },\n    /* 1 */\n\n    /*!*************************!*\\\n      !*** ./src/reducers.js ***!\n      \\*************************/\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      'use strict';\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.cognito = undefined;\n\n      var _amazonCognitoIdentityJs = __webpack_require__(\n      /*! amazon-cognito-identity-js */\n      2);\n\n      var _states = __webpack_require__(\n      /*! ./states */\n      3);\n      /* global AWS */\n\n\n      var initial = {\n        user: null,\n        cache: {\n          // cached for post register login\n          userName: null,\n          email: null\n        },\n        state: _states.CognitoState.LOGGED_OUT,\n        error: '',\n        userPool: null,\n        attributes: {},\n        creds: null,\n        groups: [],\n        config: {\n          region: null,\n          userPool: null,\n          clientId: null,\n          identityPool: null\n        }\n      };\n\n      var configure = function configure(state, action) {\n        // surprise side-effect!\n        AWS.config.region = action.config.region;\n        var pool = new _amazonCognitoIdentityJs.CognitoUserPool({\n          UserPoolId: action.config.userPool,\n          ClientId: action.config.clientId\n        });\n        var user = pool.getCurrentUser();\n        return Object.assign({}, state, {\n          config: action.config,\n          userPool: pool,\n          user: user\n        });\n      }; // sometimes we don't get the attributes in later parts of the login flow\n      // but lets not clobber the ones we've got if we've not got them\n\n\n      var addAttributes = function addAttributes(s, attributes) {\n        var s2 = Object.assign({}, s);\n\n        if (attributes) {\n          s2.attributes = attributes;\n        }\n\n        return s2;\n      };\n      /**\n       * reducer function to be passed to redux combineReducers\n       * @param {object} state\n       * @param {object} action\n      */\n\n\n      var cognito = exports.cognito = function cognito() {\n        var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initial;\n        var action = arguments[1];\n\n        switch (action.type) {\n          case 'COGNITO_CONFIGURE':\n            return configure(state, action);\n\n          case 'COGNITO_AUTHENTICATED':\n            return Object.assign({}, state, {\n              user: action.user,\n              cache: {\n                userName: null,\n                email: null\n              },\n              error: '',\n              state: _states.CognitoState.AUTHENTICATED\n            });\n\n          case 'COGNITO_CLEAR_CACHE':\n            return Object.assign({}, state, {\n              cache: {\n                userName: null,\n                email: null\n              }\n            });\n\n          case 'COGNITO_LOGGING_IN':\n            return Object.assign({}, state, {\n              state: _states.CognitoState.LOGGING_IN,\n              attributes: action.attributes\n            });\n\n          case 'COGNITO_LOGIN':\n            return Object.assign({}, state, addAttributes({\n              error: '',\n              creds: action.creds,\n              groups: action.groups,\n              state: _states.CognitoState.LOGGED_IN\n            }, action.attributes));\n\n          case 'COGNITO_LOGOUT':\n            return Object.assign({}, state, {\n              user: null,\n              attributes: {},\n              error: '',\n              creds: null,\n              groups: [],\n              state: _states.CognitoState.LOGGED_OUT\n            });\n\n          case 'COGNITO_PARTIAL_LOGOUT':\n            return Object.assign({}, state, {\n              user: null,\n              userName: state.user.username,\n              error: '',\n              creds: null,\n              groups: [],\n              state: _states.CognitoState.LOGGED_OUT\n            });\n\n          case 'COGNITO_LOGIN_FAILURE':\n            return Object.assign({}, state, {\n              user: action.user,\n              state: _states.CognitoState.LOGGED_OUT,\n              error: action.error\n            });\n\n          case 'COGNITO_LOGIN_MFA_REQUIRED':\n            return Object.assign({}, state, {\n              user: action.user,\n              error: '',\n              state: _states.CognitoState.MFA_REQUIRED\n            });\n\n          case 'COGNITO_LOGIN_NEW_PASSWORD_REQUIRED':\n            return Object.assign({}, state, {\n              user: action.user,\n              error: '',\n              state: _states.CognitoState.NEW_PASSWORD_REQUIRED\n            });\n\n          case 'COGNITO_USER_UNCONFIRMED':\n            return Object.assign({}, state, {\n              user: action.user,\n              state: _states.CognitoState.CONFIRMATION_REQUIRED,\n              cache: {\n                userName: action.user.username,\n                email: action.email ? action.email : state.cache.email\n              }\n            });\n\n          case 'COGNITO_USER_CONFIRM_FAILED':\n            return Object.assign({}, state, {\n              user: action.user,\n              state: _states.CognitoState.CONFIRMATION_REQUIRED,\n              error: action.error\n            });\n\n          case 'COGNITO_NEW_PASSWORD_REQUIRED_FAILURE':\n            return Object.assign({}, state, {\n              error: action.error,\n              state: _states.CognitoState.NEW_PASSWORD_REQUIRED\n            });\n\n          case 'COGNITO_EMAIL_VERIFICATION_REQUIRED':\n            return Object.assign({}, state, addAttributes({\n              error: '',\n              state: _states.CognitoState.EMAIL_VERIFICATION_REQUIRED\n            }, action.attributes));\n\n          case 'COGNITO_EMAIL_VERIFICATION_FAILED':\n            return Object.assign({}, state, addAttributes({\n              error: action.error,\n              state: _states.CognitoState.EMAIL_VERIFICATION_REQUIRED\n            }, action.attributes));\n\n          case 'COGNITO_BEGIN_PASSWORD_RESET_FLOW':\n            return Object.assign({}, state, {\n              error: action.error\n            });\n\n          case 'COGNITO_CONTINUE_PASSWORD_RESET_FLOW':\n            return state;\n\n          case 'COGNITO_FINISH_PASSWORD_RESET_FLOW':\n            return state;\n          // this moves us into the AUTHENTICATED state, potentially causing\n          // a number of side-effects. this is so we can re-verify the email\n          // address if we have to\n\n          case 'COGNITO_UPDATE_USER_ATTRIBUTES':\n            return Object.assign({}, state, {\n              attributes: Object.assign({}, state.attributes, action.attributes),\n              state: _states.CognitoState.AUTHENTICATED\n            });\n\n          default:\n            return state;\n        }\n      };\n      /***/\n\n    },\n    /* 2 */\n\n    /*!*********************************************************************************************************************************************************************!*\\\n      !*** external {\"root\":\"AmazonCognitoIdentity\",\"commonjs2\":\"amazon-cognito-identity-js\",\"commonjs\":\"amazon-cognito-identity-js\",\"amd\":\"amazon-cognito-identity-js\"} ***!\n      \\*********************************************************************************************************************************************************************/\n\n    /***/\n    function (module, exports) {\n      module.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n      /***/\n    },\n    /* 3 */\n\n    /*!***********************!*\\\n      !*** ./src/states.js ***!\n      \\***********************/\n\n    /***/\n    function (module, exports) {\n      'use strict';\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      /** states stored in store.cognito.state */\n\n      var CognitoState = exports.CognitoState = {\n        LOGGED_OUT: 'LOGGED_OUT',\n        AUTHENTICATED: 'AUTHENTICATED',\n        LOGGING_IN: 'LOGGING_IN',\n        LOGGED_IN: 'LOGGED_IN',\n        NEW_PASSWORD_REQUIRED: 'NEW_PASSWORD_REQUIRED',\n        MFA_REQUIRED: 'MFA_REQUIRED',\n        EMAIL_VERIFICATION_REQUIRED: 'EMAIL_VERIFICATION_REQUIRED',\n        CONFIRMATION_REQUIRED: 'CONFIRMATION_REQUIRED'\n      };\n      /***/\n    },\n    /* 4 */\n\n    /*!************************!*\\\n      !*** ./src/actions.js ***!\n      \\************************/\n\n    /***/\n    function (module, exports) {\n      'use strict';\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      /**\n       * container for all the actions\n      */\n\n      var Action = {\n        configure: function configure(config) {\n          return {\n            type: 'COGNITO_CONFIGURE',\n            config: config\n          };\n        },\n        authenticated: function authenticated(user) {\n          return {\n            type: 'COGNITO_AUTHENTICATED',\n            user: user\n          };\n        },\n        loggingIn: function loggingIn(attributes) {\n          return {\n            type: 'COGNITO_LOGGING_IN',\n            attributes: attributes\n          };\n        },\n        login: function login(creds, attributes, groups) {\n          return {\n            type: 'COGNITO_LOGIN',\n            creds: creds,\n            groups: groups,\n            attributes: attributes\n          };\n        },\n        logout: function logout() {\n          return {\n            type: 'COGNITO_LOGOUT'\n          };\n        },\n        partialLogout: function partialLogout() {\n          return {\n            type: 'COGNITO_PARTIAL_LOGOUT'\n          };\n        },\n        loginFailure: function loginFailure(user, error) {\n          return {\n            type: 'COGNITO_LOGIN_FAILURE',\n            user: user,\n            error: error\n          };\n        },\n        mfaRequired: function mfaRequired(user) {\n          return {\n            type: 'COGNITO_LOGIN_MFA_REQUIRED',\n            user: user\n          };\n        },\n        newPasswordRequired: function newPasswordRequired(user) {\n          return {\n            type: 'COGNITO_LOGIN_NEW_PASSWORD_REQUIRED',\n            user: user\n          };\n        },\n        newPasswordRequiredFailure: function newPasswordRequiredFailure(user, error) {\n          return {\n            type: 'COGNITO_NEW_PASSWORD_REQUIRED_FAILURE',\n            user: user,\n            error: error\n          };\n        },\n        emailVerificationRequired: function emailVerificationRequired(attributes) {\n          return {\n            type: 'COGNITO_EMAIL_VERIFICATION_REQUIRED',\n            attributes: attributes\n          };\n        },\n        emailVerificationFailed: function emailVerificationFailed(user, error) {\n          return {\n            type: 'COGNITO_EMAIL_VERIFICATION_FAILED',\n            user: user,\n            error: error\n          };\n        },\n        beginPasswordResetFlow: function beginPasswordResetFlow(user, error) {\n          return {\n            type: 'COGNITO_BEGIN_PASSWORD_RESET_FLOW',\n            user: user,\n            error: error\n          };\n        },\n        continuePasswordResetFlow: function continuePasswordResetFlow(user) {\n          return {\n            type: 'COGNITO_CONTINUE_PASSWORD_RESET_FLOW',\n            user: user\n          };\n        },\n        finishPasswordResetFlow: function finishPasswordResetFlow(error) {\n          return {\n            type: 'COGNITO_FINISH_PASSWORD_RESET_FLOW',\n            error: error\n          };\n        },\n        updateAttributes: function updateAttributes(attributes) {\n          return {\n            type: 'COGNITO_UPDATE_USER_ATTRIBUTES',\n            attributes: attributes\n          };\n        },\n        confirmationRequired: function confirmationRequired(user, email) {\n          return {\n            type: 'COGNITO_USER_UNCONFIRMED',\n            user: user,\n            email: email\n          };\n        },\n        confirmFailed: function confirmFailed(user, error) {\n          return {\n            type: 'COGNITO_USER_CONFIRM_FAILED',\n            user: user,\n            error: error\n          };\n        },\n        clearCache: function clearCache() {\n          return {\n            type: 'COGNITO_CLEAR_CACHE'\n          };\n        }\n      };\n      exports.Action = Action;\n      /***/\n    },\n    /* 5 */\n\n    /*!**********************!*\\\n      !*** ./src/utils.js ***!\n      \\**********************/\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      'use strict';\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.getGroups = exports.buildLogins = exports.changePassword = undefined;\n\n      var _global = __webpack_require__(\n      /*! aws-sdk/global */\n      6);\n      /**\n       * Change a user's password\n       * @param {object} user - the cognito user object\n       * @param {string} oldPassword - the current password\n       * @param {string} newPassword - the new password\n      */\n\n\n      var changePassword = function changePassword(user, oldPassword, newPassword) {\n        return new Promise(function (resolve, reject) {\n          return user.changePassword(oldPassword, newPassword, function (err, result) {\n            if (err) {\n              reject(err.message);\n            } else {\n              resolve(result);\n            }\n          });\n        });\n      };\n      /**\n       * builds the federated identity pool login structure\n       * @param {string} username - the username of the user\n       * @param {string} jwtToken - a JWT Token from the session\n       * @param {object} config - the cognito react config object\n      */\n\n\n      var buildLogins = function buildLogins(username, jwtToken, config) {\n        var loginDomain = 'cognito-idp.' + config.region + '.amazonaws.com';\n        var loginUrl = loginDomain + '/' + config.userPool;\n        var creds = {\n          IdentityPoolId: config.identityPool,\n          Logins: {},\n          LoginId: username\n        };\n        creds.Logins[loginUrl] = jwtToken;\n        return creds;\n      };\n      /**\n       * Decode a jwtToken to check for cognito:groups\n       * @param {string} jwtToken - a JWT Token from the session\n       */\n\n\n      var getGroups = function getGroups(jwtToken) {\n        var payload = jwtToken.split('.')[1];\n        var decodedToken = JSON.parse(_global.util.base64.decode(payload).toString('utf8')); // decodedToken['cognito:groups'] can be undefined if user is in no groups\n\n        if (!decodedToken['cognito:groups']) {\n          return [];\n        }\n\n        return decodedToken['cognito:groups'];\n      };\n\n      exports.changePassword = changePassword;\n      exports.buildLogins = buildLogins;\n      exports.getGroups = getGroups;\n      /***/\n    },\n    /* 6 */\n\n    /*!*********************************!*\\\n      !*** external \"aws-sdk/global\" ***!\n      \\*********************************/\n\n    /***/\n    function (module, exports) {\n      module.exports = __WEBPACK_EXTERNAL_MODULE_6__;\n      /***/\n    },\n    /* 7 */\n\n    /*!**********************!*\\\n      !*** ./src/guard.js ***!\n      \\**********************/\n\n    /***/\n    function (module, exports) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      /*\n       Default behaviour is to restrict access to only logged in users\n      */\n\n      var testLoggedIn = function testLoggedIn(state, wantLoggedIn) {\n        var isLoggedIn = state.cognito.user !== null;\n\n        if (isLoggedIn && wantLoggedIn) {\n          return true;\n        }\n\n        if (!isLoggedIn && !wantLoggedIn) {\n          return true;\n        }\n\n        return false;\n      };\n\n      var permitted = function permitted(state, expr) {\n        return new Promise(function (resolve) {\n          if (expr.loggedIn !== undefined) {\n            resolve(testLoggedIn(state, expr.loggedIn));\n          } else {\n            resolve(testLoggedIn(state, true));\n          }\n        });\n      };\n\n      var guard = function guard(store, forbiddenUrl) {\n        var expr = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n        var routeState = arguments[3];\n        var replace = arguments[4];\n        var callback = arguments[5];\n        var state = store.getState();\n        var dest = forbiddenUrl;\n\n        if (expr.forbiddenUrl !== undefined) {\n          dest = expr.forbiddenUrl;\n        }\n\n        permitted(state, expr).then(function (allow) {\n          if (!allow) {\n            replace(dest);\n          }\n\n          callback();\n        });\n      };\n      /**\n       * creates a guard function you can use in <Route> tags\n       * @param {object} store - the redux store\n       * @param {string} forbiddenUrl - the default url to navigate to if forbidden\n       * @returns {function} - a function that can be provided to onEnter\n      */\n\n\n      var createGuard = function createGuard(store, forbiddenUrl) {\n        return function (expr) {\n          return function (state, replace, callback) {\n            return guard(store, forbiddenUrl, expr, state, replace, callback);\n          };\n        };\n      };\n\n      exports.createGuard = createGuard;\n      /***/\n    },\n    /* 8 */\n\n    /*!*********************!*\\\n      !*** ./src/auth.js ***!\n      \\*********************/\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      'use strict';\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.emailVerificationFlow = exports.registerUser = exports.performLogin = exports.authenticate = undefined;\n\n      var _amazonCognitoIdentityJs = __webpack_require__(\n      /*! amazon-cognito-identity-js */\n      2);\n\n      var _global = __webpack_require__(\n      /*! aws-sdk/global */\n      6);\n\n      var _actions = __webpack_require__(\n      /*! ./actions */\n      4);\n\n      var _attributes = __webpack_require__(\n      /*! ./attributes */\n      9);\n\n      var _utils = __webpack_require__(\n      /*! ./utils */\n      5);\n      /**\n       * sends the email verification code and transitions to the correct state\n       * @param {object} user - the CognitoUser object\n       * @param {object} attributes - the attributes dictionary\n       * @return {Promise<object>} a promise that resolves to a redux action\n      */\n\n\n      var emailVerificationFlow = function emailVerificationFlow(user, attributes) {\n        return new Promise(function (resolve) {\n          return (0, _attributes.sendAttributeVerificationCode)(user, 'email').then(function (required) {\n            if (required) {\n              resolve(_actions.Action.emailVerificationRequired(attributes));\n            } else {\n              // dead end?\n              resolve(_actions.Action.loggingIn(attributes));\n            }\n          }, function (error) {\n            // some odd classes of error here\n            resolve(_actions.Action.emailVerificationFailed(error, attributes));\n          });\n        });\n      };\n      /**\n       * logs in to the federated identity pool with a JWT\n       * @param {string} username - the username\n       * @param {string} jwtToken - a token from the session\n       * @param {object} config - the react-cognito config\n       * @return {Promise<object>} a promise that resolves to the federated identity credentials\n      */\n\n\n      var refreshIdentityCredentials = function refreshIdentityCredentials(username, jwtToken, config) {\n        return new Promise(function (resolve, reject) {\n          var logins = (0, _utils.buildLogins)(username, jwtToken, config);\n          var creds = new _global.CognitoIdentityCredentials(logins, {\n            region: config.region\n          });\n          creds.refresh(function (error) {\n            if (error) {\n              reject(error.message);\n            } else {\n              resolve(creds);\n            }\n          });\n        });\n      };\n      /**\n       * establishes a session with the user pool, and logs into the federated identity\n       * pool using a token from the session\n       * @param {object} user - the CognitoUser object\n       * @param {object} config -the react-cognito config\n       * @return {Promise<object>} an action to be dispatched\n      */\n\n\n      var performLogin = function performLogin(user, config, group) {\n        return new Promise(function (resolve, reject) {\n          if (user === null) {\n            resolve(_actions.Action.logout());\n          } else {\n            user.getSession(function (err, session) {\n              if (err) {\n                resolve(_actions.Action.loginFailure(user, err.message));\n              } else {\n                var jwtToken = session.getIdToken().getJwtToken();\n                var groups = (0, _utils.getGroups)(jwtToken);\n\n                if (group && !groups.includes(group)) {\n                  return resolve(_actions.Action.loginFailure(user, 'Insufficient privilege'));\n                }\n\n                var username = user.getUsername();\n                refreshIdentityCredentials(username, jwtToken, config).then(function (creds) {\n                  (0, _attributes.getUserAttributes)(user).then(function (attributes) {\n                    resolve(_actions.Action.login(creds, attributes, groups));\n                  });\n                }, function (message) {\n                  return resolve(_actions.Action.loginFailure(user, message));\n                });\n              }\n            });\n          }\n        });\n      };\n      /**\n       *\n       * Authenticates with a user pool, and handles responses.\n       * if the authentication is successful it then logs in to the\n       * identity pool.\n       *\n       * returns an action depending on the outcome.  Possible actions returned\n       * are:\n       *\n       * - login - valid user who is logged in\n       * - loginFailure - failed to authenticate with user pool or identity pool\n       * - mfaRequired - user now needs to enter MFA\n       * - newPasswordRequired - user must change password on first login\n       * - emailVerificationRequired - user must verify their email address\n       * - emailVerificationFailed - email verification is required, but won't work\n       *\n       * Dispatch the resulting action, e.g.:\n       *\n       * ```\n       * const { userPool, config } = state.cognito;\n       * authenticate(username, password, userPool, config).then(dispatch);\n       * ```\n       *\n       * @param {string} username - the username provided by the user\n       * @param {string} password - the password provided by the user\n       * @param {object} userPool - a Cognito User Pool object\n       * @return {Promise<object>} - a promise that resolves an action to be dispatched\n       *\n      */\n\n\n      var authenticate = function authenticate(username, password, userPool, config, dispatch) {\n        return new Promise(function (resolve, reject) {\n          var creds = new _amazonCognitoIdentityJs.AuthenticationDetails({\n            Username: username,\n            Password: password\n          });\n          var user = new _amazonCognitoIdentityJs.CognitoUser({\n            Username: username,\n            Pool: userPool\n          });\n          user.authenticateUser(creds, {\n            onSuccess: function onSuccess() {\n              dispatch(_actions.Action.authenticated(user));\n              resolve();\n            },\n            onFailure: function onFailure(error) {\n              if (error.code === 'UserNotConfirmedException') {\n                dispatch(_actions.Action.confirmationRequired(user));\n                resolve();\n              } else {\n                dispatch(_actions.Action.loginFailure(user, error.message));\n                reject(error);\n              }\n            },\n            mfaRequired: function mfaRequired() {\n              dispatch(_actions.Action.mfaRequired(user));\n              resolve();\n            },\n            newPasswordRequired: function newPasswordRequired() {\n              dispatch(_actions.Action.newPasswordRequired(user));\n              resolve();\n            }\n          });\n        });\n      };\n      /**\n       * sign up this user with the user pool provided\n       * @param {object} userPool - a Cognito userpool (e.g. state.cognito.userPool)\n       * @param {object} config - the react-cognito config object\n       * @param {string} username - the username\n       * @param {string} password - the password\n       * @param {object} attributes - an attributes dictionary\n       * @return {Promise<object>} a promise that resolves a redux action\n      */\n\n\n      var registerUser = function registerUser(userPool, config, username, password, attributes) {\n        return new Promise(function (resolve, reject) {\n          return userPool.signUp(username, password, (0, _attributes.mkAttrList)(attributes), null, function (err, result) {\n            if (err) {\n              reject(err.message);\n            } else if (result.userConfirmed === false) {\n              resolve(_actions.Action.confirmationRequired(result.user, attributes.email));\n            } else {\n              resolve(authenticate(username, password, userPool));\n            }\n          });\n        });\n      };\n\n      exports.authenticate = authenticate;\n      exports.performLogin = performLogin;\n      exports.registerUser = registerUser;\n      exports.emailVerificationFlow = emailVerificationFlow;\n      /***/\n    },\n    /* 9 */\n\n    /*!***************************!*\\\n      !*** ./src/attributes.js ***!\n      \\***************************/\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      'use strict';\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.mkAttrList = exports.updateAttributes = exports.getUserAttributes = exports.sendAttributeVerificationCode = undefined;\n\n      var _actions = __webpack_require__(\n      /*! ./actions */\n      4);\n      /**\n       * Request that a verification code is sent by email or SMS to verify\n       * an attribute\n       * @param {object} user - the cognito user object\n       * @param {string} attribute - the attribute name\n      */\n\n\n      var sendAttributeVerificationCode = function sendAttributeVerificationCode(user, attribute) {\n        return new Promise(function (resolve, reject) {\n          user.getAttributeVerificationCode(attribute, {\n            onSuccess: function onSuccess() {\n              return resolve(false);\n            },\n            inputVerificationCode: function inputVerificationCode() {\n              return resolve(true);\n            },\n            onFailure: function onFailure(error) {\n              return reject(error.message);\n            }\n          });\n        });\n      };\n      /**\n       * Fetches the user attributes from Cognito, and turns them into\n       * an object\n       * @param {object} user - the cognito user object\n       * @returns {Promise} resolves with the attributes or rejects with an error message\n      */\n\n\n      var getUserAttributes = function getUserAttributes(user) {\n        return new Promise(function (resolve, reject) {\n          return user.getUserAttributes(function (error, result) {\n            if (error) {\n              reject(error.message);\n            } else {\n              var attributes = {};\n\n              for (var i = 0; i < result.length; i += 1) {\n                var name = result[i].getName();\n                var value = result[i].getValue();\n                attributes[name] = value;\n              }\n\n              resolve(attributes);\n            }\n          });\n        });\n      };\n      /**\n       * convert an attribute dictionary to an attribute list\n       * @param {object} attributes - a dictionary of attributes\n       * @return {array} AWS expected attribute list\n      */\n\n\n      var mkAttrList = function mkAttrList(attributes) {\n        return Object.keys(attributes).map(function (key) {\n          return {\n            Name: key,\n            Value: attributes[key]\n          };\n        });\n      };\n      /**\n       * update the attributes in Cognito\n       * @param {object} user - the CognitoUser object\n       * @param {object} attributes - an attributes dictionary with the attributes to be updated\n       * @return {Promise<object>} a promise that resolves to a redux action\n      */\n\n\n      var updateAttributes = function updateAttributes(user, attributes) {\n        return new Promise(function (resolve, reject) {\n          var attributeList = mkAttrList(attributes);\n          user.updateAttributes(attributeList, function (err) {\n            if (err) {\n              reject(err.message);\n            } else {\n              resolve(_actions.Action.updateAttributes(attributes));\n            }\n          });\n        });\n      };\n\n      exports.sendAttributeVerificationCode = sendAttributeVerificationCode;\n      exports.getUserAttributes = getUserAttributes;\n      exports.updateAttributes = updateAttributes;\n      exports.mkAttrList = mkAttrList;\n      /***/\n    },\n    /* 10 */\n\n    /*!***********************!*\\\n      !*** ./src/policy.js ***!\n      \\***********************/\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      'use strict';\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.identityPoolLogin = exports.emailVerificationRequired = exports.fetchAttributes = exports.direct = exports.enable = exports.setupCognito = undefined;\n\n      var _actions = __webpack_require__(\n      /*! ./actions */\n      4);\n\n      var _attributes = __webpack_require__(\n      /*! ./attributes */\n      9);\n\n      var _auth = __webpack_require__(\n      /*! ./auth */\n      8);\n\n      var _states = __webpack_require__(\n      /*! ./states */\n      3);\n      /**\n       * subscribes a \"policy\" function to the store, and calls it\n       * with the state and the dispatch function\n       * @param {object} store - the redux store\n       * @param {function} f - f(state, dispatch)\n      */\n\n\n      var enable = function enable(store, f, params) {\n        store.subscribe(function () {\n          var state = store.getState();\n          var dispatch = store.dispatch;\n          f(state, dispatch, params);\n        });\n      };\n      /**\n       * requires email verification before transitioning from AUTHENTICATED\n       * @param {object} state - the redux store state\n       * @param {function} dispatch - the dispatch function\n      */\n\n\n      var emailVerificationRequired = function emailVerificationRequired(state, dispatch) {\n        if (state.cognito.state === _states.CognitoState.AUTHENTICATED) {\n          var user = state.cognito.user;\n          (0, _attributes.getUserAttributes)(user).then(function (attributes) {\n            if (attributes.email_verified !== 'true') {\n              (0, _auth.emailVerificationFlow)(user, attributes).then(dispatch);\n            } else {\n              dispatch(_actions.Action.loggingIn(attributes));\n            }\n          });\n        }\n      };\n      /**\n       * fetches and stores attributes before transitioning from AUTHENTICATED\n       * @param {object} state - the redux store state\n       * @param {function} dispatch - the dispatch function\n      */\n\n\n      var fetchAttributes = function fetchAttributes(state, dispatch) {\n        if (state.cognito.state === _states.CognitoState.AUTHENTICATED) {\n          var user = state.cognito.user;\n          (0, _attributes.getUserAttributes)(user).then(function (attributes) {\n            dispatch(_actions.Action.loggingIn(attributes));\n          });\n        }\n      };\n      /**\n       * transitions directly from AUTHENTICATED to LOGGING_IN\n       * @param {object} state - the redux store state\n       * @param {function} dispatch - the dispatch function\n      */\n\n\n      var direct = function direct(state, dispatch) {\n        if (state.cognito.state === _states.CognitoState.AUTHENTICATED) {\n          dispatch(_actions.Action.loggingIn());\n        }\n      };\n      /**\n       * logs into the single federated identity pool to transition from LOGGING_IN\n       * to LOGGED_IN\n       * @param {object} state - the redux store state\n       * @param {function} dispatch - the dispatch function\n      */\n\n\n      var identityPoolLogin = function identityPoolLogin(state, dispatch, group) {\n        if (state.cognito.state === _states.CognitoState.LOGGING_IN) {\n          (0, _auth.performLogin)(state.cognito.user, state.cognito.config, group).then(dispatch);\n        }\n      };\n      /**\n       * sets up react-cognito with default policies.\n      */\n\n\n      var setupCognito = function setupCognito(store, config) {\n        var listeners = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [emailVerificationRequired, identityPoolLogin];\n        store.dispatch(_actions.Action.configure(config));\n        listeners.forEach(function (f) {\n          enable(store, f, config.group);\n        });\n        store.dispatch(_actions.Action.loggingIn({}));\n      };\n\n      exports.setupCognito = setupCognito;\n      exports.enable = enable;\n      exports.direct = direct;\n      exports.fetchAttributes = fetchAttributes;\n      exports.emailVerificationRequired = emailVerificationRequired;\n      exports.identityPoolLogin = identityPoolLogin;\n      /***/\n    },\n    /* 11 */\n\n    /*!***********************!*\\\n      !*** ./src/Login.jsx ***!\n      \\***********************/\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      'use strict';\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.Login = undefined;\n\n      var _react = __webpack_require__(\n      /*! react */\n      12);\n\n      var _react2 = _interopRequireDefault(_react);\n\n      var _reactRedux = __webpack_require__(\n      /*! react-redux */\n      13);\n\n      var _auth = __webpack_require__(\n      /*! ./auth */\n      8);\n\n      var _actions = __webpack_require__(\n      /*! ./actions */\n      4);\n\n      function _interopRequireDefault(obj) {\n        return obj && obj.__esModule ? obj : {\n          default: obj\n        };\n      }\n\n      var BaseLogin = function BaseLogin(props) {\n        return _react2.default.cloneElement(props.children, {\n          username: props.username,\n          email: props.email,\n          onSubmit: props.onSubmit,\n          clearCache: props.clearCache,\n          error: props.error\n        });\n      };\n\n      var mapStateToProps = function mapStateToProps(state) {\n        var username = '';\n\n        if (state.cognito.user) {\n          username = state.cognito.user.getUsername();\n        } else if (state.cognito.userName) {\n          username = state.cognito.cache.userName;\n        }\n\n        return {\n          username: username,\n          email: state.cognito.cache.email,\n          config: state.cognito.config,\n          userPool: state.cognito.userPool,\n          error: state.cognito.error\n        };\n      };\n\n      var mapDispatchToProps = function mapDispatchToProps(dispatch) {\n        return {\n          authenticator: function authenticator(username, password, userPool, config) {\n            return (0, _auth.authenticate)(username, password, userPool, config, dispatch);\n          },\n          clearCache: function clearCache() {\n            return dispatch(_actions.Action.clearCache());\n          }\n        };\n      };\n\n      var mergeProps = function mergeProps(stateProps, dispatchProps, ownProps) {\n        return Object.assign({}, ownProps, stateProps, {\n          onSubmit: function onSubmit(username, password) {\n            return dispatchProps.authenticator(username, password, stateProps.userPool, stateProps.config);\n          },\n          clearCache: dispatchProps.clearCache\n        });\n      };\n      /**\n       * Container for login behaviour, wrapping a login form.\n       *\n       * Magically provides the following props to the wrapped form:\n       *\n       *  * username\n       *  * onSubmit\n       *\n       * @example\n       * <Login>\n       *   <LoginForm />\n       * </Login>\n       */\n\n\n      var Login = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps, mergeProps)(BaseLogin);\n      exports.Login = Login;\n      /***/\n    },\n    /* 12 */\n\n    /*!**************************************************************************************!*\\\n      !*** external {\"root\":\"React\",\"commonjs2\":\"react\",\"commonjs\":\"react\",\"amd\":\"react\"} ***!\n      \\**************************************************************************************/\n\n    /***/\n    function (module, exports) {\n      module.exports = __WEBPACK_EXTERNAL_MODULE_12__;\n      /***/\n    },\n    /* 13 */\n\n    /*!*************************************************************************************************************!*\\\n      !*** external {\"root\":\"ReactRedux\",\"commonjs\":\"react-redux\",\"commonjs2\":\"react-redux\",\"amd\":\"react-redux\"} ***!\n      \\*************************************************************************************************************/\n\n    /***/\n    function (module, exports) {\n      module.exports = __WEBPACK_EXTERNAL_MODULE_13__;\n      /***/\n    },\n    /* 14 */\n\n    /*!************************!*\\\n      !*** ./src/Logout.jsx ***!\n      \\************************/\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      'use strict';\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.Logout = undefined;\n\n      var _createClass = function () {\n        function defineProperties(target, props) {\n          for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];\n            descriptor.enumerable = descriptor.enumerable || false;\n            descriptor.configurable = true;\n            if (\"value\" in descriptor) descriptor.writable = true;\n            Object.defineProperty(target, descriptor.key, descriptor);\n          }\n        }\n\n        return function (Constructor, protoProps, staticProps) {\n          if (protoProps) defineProperties(Constructor.prototype, protoProps);\n          if (staticProps) defineProperties(Constructor, staticProps);\n          return Constructor;\n        };\n      }();\n\n      var _react = __webpack_require__(\n      /*! react */\n      12);\n\n      var _react2 = _interopRequireDefault(_react);\n\n      var _propTypes = __webpack_require__(\n      /*! prop-types */\n      15);\n\n      var _propTypes2 = _interopRequireDefault(_propTypes);\n\n      var _actions = __webpack_require__(\n      /*! ./actions */\n      4);\n\n      function _interopRequireDefault(obj) {\n        return obj && obj.__esModule ? obj : {\n          default: obj\n        };\n      }\n\n      function _classCallCheck(instance, Constructor) {\n        if (!(instance instanceof Constructor)) {\n          throw new TypeError(\"Cannot call a class as a function\");\n        }\n      }\n\n      function _possibleConstructorReturn(self, call) {\n        if (!self) {\n          throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n        }\n\n        return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n      }\n\n      function _inherits(subClass, superClass) {\n        if (typeof superClass !== \"function\" && superClass !== null) {\n          throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n        }\n\n        subClass.prototype = Object.create(superClass && superClass.prototype, {\n          constructor: {\n            value: subClass,\n            enumerable: false,\n            writable: true,\n            configurable: true\n          }\n        });\n        if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n      }\n      /**\n       * Container for logout behaviour.\n       * @example\n       * <Logout onLogout={handler}>\n       *   <LogoutForm />\n       * </Logout>\n       */\n\n\n      var Logout = exports.Logout = function (_React$Component) {\n        _inherits(Logout, _React$Component);\n\n        function Logout() {\n          var _ref;\n\n          var _temp, _this, _ret;\n\n          _classCallCheck(this, Logout);\n\n          for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n          }\n\n          return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Logout.__proto__ || Object.getPrototypeOf(Logout)).call.apply(_ref, [this].concat(args))), _this), _this.onClick = function (event) {\n            var store = _this.context.store;\n            var state = store.getState();\n            state.cognito.user.signOut();\n            event.preventDefault();\n            store.dispatch(_actions.Action.logout());\n\n            _this.props.onLogout();\n          }, _temp), _possibleConstructorReturn(_this, _ret);\n        }\n        /**\n         * Passed to child element as onClick prop.\n         * Signs the user out, and then dispatches the logout action\n         * If you want to take further actions (like reloading UI) then add an\n         * onLogout property to the Logout element\n         */\n\n\n        _createClass(Logout, [{\n          key: 'render',\n\n          /**\n           * renders the child element, adding an onClick property\n           */\n          value: function render() {\n            return _react2.default.cloneElement(this.props.children, {\n              onClick: this.onClick\n            });\n          }\n        }]);\n\n        return Logout;\n      }(_react2.default.Component);\n\n      Logout.contextTypes = {\n        store: _propTypes2.default.object\n      };\n      Logout.propTypes = {\n        children: _propTypes2.default.any.isRequired,\n        onLogout: _propTypes2.default.func\n      };\n      Logout.defaultProps = {\n        onLogout: function onLogout() {}\n      };\n      /***/\n    },\n    /* 15 */\n\n    /*!*******************************!*\\\n      !*** ./~/prop-types/index.js ***!\n      \\*******************************/\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      /**\n       * Copyright (c) 2013-present, Facebook, Inc.\n       *\n       * This source code is licensed under the MIT license found in the\n       * LICENSE file in the root directory of this source tree.\n       */\n      if (true) {\n        var REACT_ELEMENT_TYPE = typeof Symbol === 'function' && Symbol.for && Symbol.for('react.element') || 0xeac7;\n\n        var isValidElement = function (object) {\n          return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n        }; // By explicitly using `prop-types` you are opting into new development behavior.\n        // http://fb.me/prop-types-in-prod\n\n\n        var throwOnDirectAccess = true;\n        module.exports = __webpack_require__(\n        /*! ./factoryWithTypeCheckers */\n        16)(isValidElement, throwOnDirectAccess);\n      } else {\n        // By explicitly using `prop-types` you are opting into new production behavior.\n        // http://fb.me/prop-types-in-prod\n        module.exports = require('./factoryWithThrowingShims')();\n      }\n      /***/\n\n    },\n    /* 16 */\n\n    /*!*************************************************!*\\\n      !*** ./~/prop-types/factoryWithTypeCheckers.js ***!\n      \\*************************************************/\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      /**\n       * Copyright (c) 2013-present, Facebook, Inc.\n       *\n       * This source code is licensed under the MIT license found in the\n       * LICENSE file in the root directory of this source tree.\n       */\n      'use strict';\n\n      var emptyFunction = __webpack_require__(\n      /*! fbjs/lib/emptyFunction */\n      17);\n\n      var invariant = __webpack_require__(\n      /*! fbjs/lib/invariant */\n      18);\n\n      var warning = __webpack_require__(\n      /*! fbjs/lib/warning */\n      19);\n\n      var assign = __webpack_require__(\n      /*! object-assign */\n      20);\n\n      var ReactPropTypesSecret = __webpack_require__(\n      /*! ./lib/ReactPropTypesSecret */\n      21);\n\n      var checkPropTypes = __webpack_require__(\n      /*! ./checkPropTypes */\n      22);\n\n      module.exports = function (isValidElement, throwOnDirectAccess) {\n        /* global Symbol */\n        var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\n        var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.\n\n        /**\n         * Returns the iterator method function contained on the iterable object.\n         *\n         * Be sure to invoke the function with the iterable as context:\n         *\n         *     var iteratorFn = getIteratorFn(myIterable);\n         *     if (iteratorFn) {\n         *       var iterator = iteratorFn.call(myIterable);\n         *       ...\n         *     }\n         *\n         * @param {?object} maybeIterable\n         * @return {?function}\n         */\n\n        function getIteratorFn(maybeIterable) {\n          var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);\n\n          if (typeof iteratorFn === 'function') {\n            return iteratorFn;\n          }\n        }\n        /**\n         * Collection of methods that allow declaration and validation of props that are\n         * supplied to React components. Example usage:\n         *\n         *   var Props = require('ReactPropTypes');\n         *   var MyArticle = React.createClass({\n         *     propTypes: {\n         *       // An optional string prop named \"description\".\n         *       description: Props.string,\n         *\n         *       // A required enum prop named \"category\".\n         *       category: Props.oneOf(['News','Photos']).isRequired,\n         *\n         *       // A prop named \"dialog\" that requires an instance of Dialog.\n         *       dialog: Props.instanceOf(Dialog).isRequired\n         *     },\n         *     render: function() { ... }\n         *   });\n         *\n         * A more formal specification of how these methods are used:\n         *\n         *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)\n         *   decl := ReactPropTypes.{type}(.isRequired)?\n         *\n         * Each and every declaration produces a function with the same signature. This\n         * allows the creation of custom validation functions. For example:\n         *\n         *  var MyLink = React.createClass({\n         *    propTypes: {\n         *      // An optional string or URI prop named \"href\".\n         *      href: function(props, propName, componentName) {\n         *        var propValue = props[propName];\n         *        if (propValue != null && typeof propValue !== 'string' &&\n         *            !(propValue instanceof URI)) {\n         *          return new Error(\n         *            'Expected a string or an URI for ' + propName + ' in ' +\n         *            componentName\n         *          );\n         *        }\n         *      }\n         *    },\n         *    render: function() {...}\n         *  });\n         *\n         * @internal\n         */\n\n\n        var ANONYMOUS = '<<anonymous>>'; // Important!\n        // Keep this list in sync with production version in `./factoryWithThrowingShims.js`.\n\n        var ReactPropTypes = {\n          array: createPrimitiveTypeChecker('array'),\n          bool: createPrimitiveTypeChecker('boolean'),\n          func: createPrimitiveTypeChecker('function'),\n          number: createPrimitiveTypeChecker('number'),\n          object: createPrimitiveTypeChecker('object'),\n          string: createPrimitiveTypeChecker('string'),\n          symbol: createPrimitiveTypeChecker('symbol'),\n          any: createAnyTypeChecker(),\n          arrayOf: createArrayOfTypeChecker,\n          element: createElementTypeChecker(),\n          instanceOf: createInstanceTypeChecker,\n          node: createNodeChecker(),\n          objectOf: createObjectOfTypeChecker,\n          oneOf: createEnumTypeChecker,\n          oneOfType: createUnionTypeChecker,\n          shape: createShapeTypeChecker,\n          exact: createStrictShapeTypeChecker\n        };\n        /**\n         * inlined Object.is polyfill to avoid requiring consumers ship their own\n         * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n         */\n\n        /*eslint-disable no-self-compare*/\n\n        function is(x, y) {\n          // SameValue algorithm\n          if (x === y) {\n            // Steps 1-5, 7-10\n            // Steps 6.b-6.e: +0 != -0\n            return x !== 0 || 1 / x === 1 / y;\n          } else {\n            // Step 6.a: NaN == NaN\n            return x !== x && y !== y;\n          }\n        }\n        /*eslint-enable no-self-compare*/\n\n        /**\n         * We use an Error-like object for backward compatibility as people may call\n         * PropTypes directly and inspect their output. However, we don't use real\n         * Errors anymore. We don't inspect their stack anyway, and creating them\n         * is prohibitively expensive if they are created too often, such as what\n         * happens in oneOfType() for any type before the one that matched.\n         */\n\n\n        function PropTypeError(message) {\n          this.message = message;\n          this.stack = '';\n        } // Make `instanceof Error` still work for returned errors.\n\n\n        PropTypeError.prototype = Error.prototype;\n\n        function createChainableTypeChecker(validate) {\n          if (true) {\n            var manualPropTypeCallCache = {};\n            var manualPropTypeWarningCount = 0;\n          }\n\n          function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {\n            componentName = componentName || ANONYMOUS;\n            propFullName = propFullName || propName;\n\n            if (secret !== ReactPropTypesSecret) {\n              if (throwOnDirectAccess) {\n                // New behavior only for users of `prop-types` package\n                invariant(false, 'Calling PropTypes validators directly is not supported by the `prop-types` package. ' + 'Use `PropTypes.checkPropTypes()` to call them. ' + 'Read more at http://fb.me/use-check-prop-types');\n              } else if (\"development\" !== 'production' && typeof console !== 'undefined') {\n                // Old behavior for people using React.PropTypes\n                var cacheKey = componentName + ':' + propName;\n\n                if (!manualPropTypeCallCache[cacheKey] && // Avoid spamming the console because they are often not actionable except for lib authors\n                manualPropTypeWarningCount < 3) {\n                  warning(false, 'You are manually calling a React.PropTypes validation ' + 'function for the `%s` prop on `%s`. This is deprecated ' + 'and will throw in the standalone `prop-types` package. ' + 'You may be seeing this warning due to a third-party PropTypes ' + 'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.', propFullName, componentName);\n                  manualPropTypeCallCache[cacheKey] = true;\n                  manualPropTypeWarningCount++;\n                }\n              }\n            }\n\n            if (props[propName] == null) {\n              if (isRequired) {\n                if (props[propName] === null) {\n                  return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));\n                }\n\n                return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));\n              }\n\n              return null;\n            } else {\n              return validate(props, propName, componentName, location, propFullName);\n            }\n          }\n\n          var chainedCheckType = checkType.bind(null, false);\n          chainedCheckType.isRequired = checkType.bind(null, true);\n          return chainedCheckType;\n        }\n\n        function createPrimitiveTypeChecker(expectedType) {\n          function validate(props, propName, componentName, location, propFullName, secret) {\n            var propValue = props[propName];\n            var propType = getPropType(propValue);\n\n            if (propType !== expectedType) {\n              // `propValue` being instance of, say, date/regexp, pass the 'object'\n              // check, but we can offer a more precise error message here rather than\n              // 'of type `object`'.\n              var preciseType = getPreciseType(propValue);\n              return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));\n            }\n\n            return null;\n          }\n\n          return createChainableTypeChecker(validate);\n        }\n\n        function createAnyTypeChecker() {\n          return createChainableTypeChecker(emptyFunction.thatReturnsNull);\n        }\n\n        function createArrayOfTypeChecker(typeChecker) {\n          function validate(props, propName, componentName, location, propFullName) {\n            if (typeof typeChecker !== 'function') {\n              return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');\n            }\n\n            var propValue = props[propName];\n\n            if (!Array.isArray(propValue)) {\n              var propType = getPropType(propValue);\n              return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));\n            }\n\n            for (var i = 0; i < propValue.length; i++) {\n              var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret);\n\n              if (error instanceof Error) {\n                return error;\n              }\n            }\n\n            return null;\n          }\n\n          return createChainableTypeChecker(validate);\n        }\n\n        function createElementTypeChecker() {\n          function validate(props, propName, componentName, location, propFullName) {\n            var propValue = props[propName];\n\n            if (!isValidElement(propValue)) {\n              var propType = getPropType(propValue);\n              return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));\n            }\n\n            return null;\n          }\n\n          return createChainableTypeChecker(validate);\n        }\n\n        function createInstanceTypeChecker(expectedClass) {\n          function validate(props, propName, componentName, location, propFullName) {\n            if (!(props[propName] instanceof expectedClass)) {\n              var expectedClassName = expectedClass.name || ANONYMOUS;\n              var actualClassName = getClassName(props[propName]);\n              return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));\n            }\n\n            return null;\n          }\n\n          return createChainableTypeChecker(validate);\n        }\n\n        function createEnumTypeChecker(expectedValues) {\n          if (!Array.isArray(expectedValues)) {\n            true ? warning(false, 'Invalid argument supplied to oneOf, expected an instance of array.') : void 0;\n            return emptyFunction.thatReturnsNull;\n          }\n\n          function validate(props, propName, componentName, location, propFullName) {\n            var propValue = props[propName];\n\n            for (var i = 0; i < expectedValues.length; i++) {\n              if (is(propValue, expectedValues[i])) {\n                return null;\n              }\n            }\n\n            var valuesString = JSON.stringify(expectedValues);\n            return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of value `' + propValue + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));\n          }\n\n          return createChainableTypeChecker(validate);\n        }\n\n        function createObjectOfTypeChecker(typeChecker) {\n          function validate(props, propName, componentName, location, propFullName) {\n            if (typeof typeChecker !== 'function') {\n              return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');\n            }\n\n            var propValue = props[propName];\n            var propType = getPropType(propValue);\n\n            if (propType !== 'object') {\n              return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));\n            }\n\n            for (var key in propValue) {\n              if (propValue.hasOwnProperty(key)) {\n                var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n\n                if (error instanceof Error) {\n                  return error;\n                }\n              }\n            }\n\n            return null;\n          }\n\n          return createChainableTypeChecker(validate);\n        }\n\n        function createUnionTypeChecker(arrayOfTypeCheckers) {\n          if (!Array.isArray(arrayOfTypeCheckers)) {\n            true ? warning(false, 'Invalid argument supplied to oneOfType, expected an instance of array.') : void 0;\n            return emptyFunction.thatReturnsNull;\n          }\n\n          for (var i = 0; i < arrayOfTypeCheckers.length; i++) {\n            var checker = arrayOfTypeCheckers[i];\n\n            if (typeof checker !== 'function') {\n              warning(false, 'Invalid argument supplied to oneOfType. Expected an array of check functions, but ' + 'received %s at index %s.', getPostfixForTypeWarning(checker), i);\n              return emptyFunction.thatReturnsNull;\n            }\n          }\n\n          function validate(props, propName, componentName, location, propFullName) {\n            for (var i = 0; i < arrayOfTypeCheckers.length; i++) {\n              var checker = arrayOfTypeCheckers[i];\n\n              if (checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret) == null) {\n                return null;\n              }\n            }\n\n            return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));\n          }\n\n          return createChainableTypeChecker(validate);\n        }\n\n        function createNodeChecker() {\n          function validate(props, propName, componentName, location, propFullName) {\n            if (!isNode(props[propName])) {\n              return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));\n            }\n\n            return null;\n          }\n\n          return createChainableTypeChecker(validate);\n        }\n\n        function createShapeTypeChecker(shapeTypes) {\n          function validate(props, propName, componentName, location, propFullName) {\n            var propValue = props[propName];\n            var propType = getPropType(propValue);\n\n            if (propType !== 'object') {\n              return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));\n            }\n\n            for (var key in shapeTypes) {\n              var checker = shapeTypes[key];\n\n              if (!checker) {\n                continue;\n              }\n\n              var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n\n              if (error) {\n                return error;\n              }\n            }\n\n            return null;\n          }\n\n          return createChainableTypeChecker(validate);\n        }\n\n        function createStrictShapeTypeChecker(shapeTypes) {\n          function validate(props, propName, componentName, location, propFullName) {\n            var propValue = props[propName];\n            var propType = getPropType(propValue);\n\n            if (propType !== 'object') {\n              return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));\n            } // We need to check all keys in case some are required but missing from\n            // props.\n\n\n            var allKeys = assign({}, props[propName], shapeTypes);\n\n            for (var key in allKeys) {\n              var checker = shapeTypes[key];\n\n              if (!checker) {\n                return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` key `' + key + '` supplied to `' + componentName + '`.' + '\\nBad object: ' + JSON.stringify(props[propName], null, '  ') + '\\nValid keys: ' + JSON.stringify(Object.keys(shapeTypes), null, '  '));\n              }\n\n              var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n\n              if (error) {\n                return error;\n              }\n            }\n\n            return null;\n          }\n\n          return createChainableTypeChecker(validate);\n        }\n\n        function isNode(propValue) {\n          switch (typeof propValue) {\n            case 'number':\n            case 'string':\n            case 'undefined':\n              return true;\n\n            case 'boolean':\n              return !propValue;\n\n            case 'object':\n              if (Array.isArray(propValue)) {\n                return propValue.every(isNode);\n              }\n\n              if (propValue === null || isValidElement(propValue)) {\n                return true;\n              }\n\n              var iteratorFn = getIteratorFn(propValue);\n\n              if (iteratorFn) {\n                var iterator = iteratorFn.call(propValue);\n                var step;\n\n                if (iteratorFn !== propValue.entries) {\n                  while (!(step = iterator.next()).done) {\n                    if (!isNode(step.value)) {\n                      return false;\n                    }\n                  }\n                } else {\n                  // Iterator will provide entry [k,v] tuples rather than values.\n                  while (!(step = iterator.next()).done) {\n                    var entry = step.value;\n\n                    if (entry) {\n                      if (!isNode(entry[1])) {\n                        return false;\n                      }\n                    }\n                  }\n                }\n              } else {\n                return false;\n              }\n\n              return true;\n\n            default:\n              return false;\n          }\n        }\n\n        function isSymbol(propType, propValue) {\n          // Native Symbol.\n          if (propType === 'symbol') {\n            return true;\n          } // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'\n\n\n          if (propValue['@@toStringTag'] === 'Symbol') {\n            return true;\n          } // Fallback for non-spec compliant Symbols which are polyfilled.\n\n\n          if (typeof Symbol === 'function' && propValue instanceof Symbol) {\n            return true;\n          }\n\n          return false;\n        } // Equivalent of `typeof` but with special handling for array and regexp.\n\n\n        function getPropType(propValue) {\n          var propType = typeof propValue;\n\n          if (Array.isArray(propValue)) {\n            return 'array';\n          }\n\n          if (propValue instanceof RegExp) {\n            // Old webkits (at least until Android 4.0) return 'function' rather than\n            // 'object' for typeof a RegExp. We'll normalize this here so that /bla/\n            // passes PropTypes.object.\n            return 'object';\n          }\n\n          if (isSymbol(propType, propValue)) {\n            return 'symbol';\n          }\n\n          return propType;\n        } // This handles more types than `getPropType`. Only used for error messages.\n        // See `createPrimitiveTypeChecker`.\n\n\n        function getPreciseType(propValue) {\n          if (typeof propValue === 'undefined' || propValue === null) {\n            return '' + propValue;\n          }\n\n          var propType = getPropType(propValue);\n\n          if (propType === 'object') {\n            if (propValue instanceof Date) {\n              return 'date';\n            } else if (propValue instanceof RegExp) {\n              return 'regexp';\n            }\n          }\n\n          return propType;\n        } // Returns a string that is postfixed to a warning about an invalid type.\n        // For example, \"undefined\" or \"of type array\"\n\n\n        function getPostfixForTypeWarning(value) {\n          var type = getPreciseType(value);\n\n          switch (type) {\n            case 'array':\n            case 'object':\n              return 'an ' + type;\n\n            case 'boolean':\n            case 'date':\n            case 'regexp':\n              return 'a ' + type;\n\n            default:\n              return type;\n          }\n        } // Returns class name of the object, if any.\n\n\n        function getClassName(propValue) {\n          if (!propValue.constructor || !propValue.constructor.name) {\n            return ANONYMOUS;\n          }\n\n          return propValue.constructor.name;\n        }\n\n        ReactPropTypes.checkPropTypes = checkPropTypes;\n        ReactPropTypes.PropTypes = ReactPropTypes;\n        return ReactPropTypes;\n      };\n      /***/\n\n    },\n    /* 17 */\n\n    /*!**************************************************!*\\\n      !*** ./~/prop-types/~/fbjs/lib/emptyFunction.js ***!\n      \\**************************************************/\n\n    /***/\n    function (module, exports) {\n      \"use strict\";\n      /**\n       * Copyright (c) 2013-present, Facebook, Inc.\n       *\n       * This source code is licensed under the MIT license found in the\n       * LICENSE file in the root directory of this source tree.\n       *\n       * \n       */\n\n      function makeEmptyFunction(arg) {\n        return function () {\n          return arg;\n        };\n      }\n      /**\n       * This function accepts and discards inputs; it has no side effects. This is\n       * primarily useful idiomatically for overridable function endpoints which\n       * always need to be callable, since JS lacks a null-call idiom ala Cocoa.\n       */\n\n\n      var emptyFunction = function emptyFunction() {};\n\n      emptyFunction.thatReturns = makeEmptyFunction;\n      emptyFunction.thatReturnsFalse = makeEmptyFunction(false);\n      emptyFunction.thatReturnsTrue = makeEmptyFunction(true);\n      emptyFunction.thatReturnsNull = makeEmptyFunction(null);\n\n      emptyFunction.thatReturnsThis = function () {\n        return this;\n      };\n\n      emptyFunction.thatReturnsArgument = function (arg) {\n        return arg;\n      };\n\n      module.exports = emptyFunction;\n      /***/\n    },\n    /* 18 */\n\n    /*!**********************************************!*\\\n      !*** ./~/prop-types/~/fbjs/lib/invariant.js ***!\n      \\**********************************************/\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      /**\n       * Copyright (c) 2013-present, Facebook, Inc.\n       *\n       * This source code is licensed under the MIT license found in the\n       * LICENSE file in the root directory of this source tree.\n       *\n       */\n      'use strict';\n      /**\n       * Use invariant() to assert state which your program assumes to be true.\n       *\n       * Provide sprintf-style format (only %s is supported) and arguments\n       * to provide information about what broke and what you were\n       * expecting.\n       *\n       * The invariant message will be stripped in production, but the invariant\n       * will remain to ensure logic does not differ in production.\n       */\n\n      var validateFormat = function validateFormat(format) {};\n\n      if (true) {\n        validateFormat = function validateFormat(format) {\n          if (format === undefined) {\n            throw new Error('invariant requires an error message argument');\n          }\n        };\n      }\n\n      function invariant(condition, format, a, b, c, d, e, f) {\n        validateFormat(format);\n\n        if (!condition) {\n          var error;\n\n          if (format === undefined) {\n            error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');\n          } else {\n            var args = [a, b, c, d, e, f];\n            var argIndex = 0;\n            error = new Error(format.replace(/%s/g, function () {\n              return args[argIndex++];\n            }));\n            error.name = 'Invariant Violation';\n          }\n\n          error.framesToPop = 1; // we don't care about invariant's own frame\n\n          throw error;\n        }\n      }\n\n      module.exports = invariant;\n      /***/\n    },\n    /* 19 */\n\n    /*!********************************************!*\\\n      !*** ./~/prop-types/~/fbjs/lib/warning.js ***!\n      \\********************************************/\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      /**\n       * Copyright (c) 2014-present, Facebook, Inc.\n       *\n       * This source code is licensed under the MIT license found in the\n       * LICENSE file in the root directory of this source tree.\n       *\n       */\n      'use strict';\n\n      var emptyFunction = __webpack_require__(\n      /*! ./emptyFunction */\n      17);\n      /**\n       * Similar to invariant but only logs a warning if the condition is not met.\n       * This can be used to log issues in development environments in critical\n       * paths. Removing the logging code for production environments will keep the\n       * same logic and follow the same code paths.\n       */\n\n\n      var warning = emptyFunction;\n\n      if (true) {\n        var printWarning = function printWarning(format) {\n          for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n            args[_key - 1] = arguments[_key];\n          }\n\n          var argIndex = 0;\n          var message = 'Warning: ' + format.replace(/%s/g, function () {\n            return args[argIndex++];\n          });\n\n          if (typeof console !== 'undefined') {\n            console.error(message);\n          }\n\n          try {\n            // --- Welcome to debugging React ---\n            // This error was thrown as a convenience so that you can use this stack\n            // to find the callsite that caused this warning to fire.\n            throw new Error(message);\n          } catch (x) {}\n        };\n\n        warning = function warning(condition, format) {\n          if (format === undefined) {\n            throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');\n          }\n\n          if (format.indexOf('Failed Composite propType: ') === 0) {\n            return; // Ignore CompositeComponent proptype check.\n          }\n\n          if (!condition) {\n            for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\n              args[_key2 - 2] = arguments[_key2];\n            }\n\n            printWarning.apply(undefined, [format].concat(args));\n          }\n        };\n      }\n\n      module.exports = warning;\n      /***/\n    },\n    /* 20 */\n\n    /*!**********************************!*\\\n      !*** ./~/object-assign/index.js ***!\n      \\**********************************/\n\n    /***/\n    function (module, exports) {\n      /*\n      object-assign\n      (c) Sindre Sorhus\n      @license MIT\n      */\n      'use strict';\n      /* eslint-disable no-unused-vars */\n\n      var getOwnPropertySymbols = Object.getOwnPropertySymbols;\n      var hasOwnProperty = Object.prototype.hasOwnProperty;\n      var propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\n      function toObject(val) {\n        if (val === null || val === undefined) {\n          throw new TypeError('Object.assign cannot be called with null or undefined');\n        }\n\n        return Object(val);\n      }\n\n      function shouldUseNative() {\n        try {\n          if (!Object.assign) {\n            return false;\n          } // Detect buggy property enumeration order in older V8 versions.\n          // https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\n\n          var test1 = new String('abc'); // eslint-disable-line no-new-wrappers\n\n          test1[5] = 'de';\n\n          if (Object.getOwnPropertyNames(test1)[0] === '5') {\n            return false;\n          } // https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\n\n          var test2 = {};\n\n          for (var i = 0; i < 10; i++) {\n            test2['_' + String.fromCharCode(i)] = i;\n          }\n\n          var order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n            return test2[n];\n          });\n\n          if (order2.join('') !== '0123456789') {\n            return false;\n          } // https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\n\n          var test3 = {};\n          'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n            test3[letter] = letter;\n          });\n\n          if (Object.keys(Object.assign({}, test3)).join('') !== 'abcdefghijklmnopqrst') {\n            return false;\n          }\n\n          return true;\n        } catch (err) {\n          // We don't expect any of the above to throw, but better to be safe.\n          return false;\n        }\n      }\n\n      module.exports = shouldUseNative() ? Object.assign : function (target, source) {\n        var from;\n        var to = toObject(target);\n        var symbols;\n\n        for (var s = 1; s < arguments.length; s++) {\n          from = Object(arguments[s]);\n\n          for (var key in from) {\n            if (hasOwnProperty.call(from, key)) {\n              to[key] = from[key];\n            }\n          }\n\n          if (getOwnPropertySymbols) {\n            symbols = getOwnPropertySymbols(from);\n\n            for (var i = 0; i < symbols.length; i++) {\n              if (propIsEnumerable.call(from, symbols[i])) {\n                to[symbols[i]] = from[symbols[i]];\n              }\n            }\n          }\n        }\n\n        return to;\n      };\n      /***/\n    },\n    /* 21 */\n\n    /*!**************************************************!*\\\n      !*** ./~/prop-types/lib/ReactPropTypesSecret.js ***!\n      \\**************************************************/\n\n    /***/\n    function (module, exports) {\n      /**\n       * Copyright (c) 2013-present, Facebook, Inc.\n       *\n       * This source code is licensed under the MIT license found in the\n       * LICENSE file in the root directory of this source tree.\n       */\n      'use strict';\n\n      var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n      module.exports = ReactPropTypesSecret;\n      /***/\n    },\n    /* 22 */\n\n    /*!****************************************!*\\\n      !*** ./~/prop-types/checkPropTypes.js ***!\n      \\****************************************/\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      /**\n       * Copyright (c) 2013-present, Facebook, Inc.\n       *\n       * This source code is licensed under the MIT license found in the\n       * LICENSE file in the root directory of this source tree.\n       */\n      'use strict';\n\n      if (true) {\n        var invariant = __webpack_require__(\n        /*! fbjs/lib/invariant */\n        18);\n\n        var warning = __webpack_require__(\n        /*! fbjs/lib/warning */\n        19);\n\n        var ReactPropTypesSecret = __webpack_require__(\n        /*! ./lib/ReactPropTypesSecret */\n        21);\n\n        var loggedTypeFailures = {};\n      }\n      /**\n       * Assert that the values match with the type specs.\n       * Error messages are memorized and will only be shown once.\n       *\n       * @param {object} typeSpecs Map of name to a ReactPropType\n       * @param {object} values Runtime values that need to be type-checked\n       * @param {string} location e.g. \"prop\", \"context\", \"child context\"\n       * @param {string} componentName Name of the component for error messages.\n       * @param {?Function} getStack Returns the component stack.\n       * @private\n       */\n\n\n      function checkPropTypes(typeSpecs, values, location, componentName, getStack) {\n        if (true) {\n          for (var typeSpecName in typeSpecs) {\n            if (typeSpecs.hasOwnProperty(typeSpecName)) {\n              var error; // Prop type validation may throw. In case they do, we don't want to\n              // fail the render phase where it didn't fail before. So we log it.\n              // After these have been cleaned up, we'll let them throw.\n\n              try {\n                // This is intentionally an invariant that gets caught. It's the same\n                // behavior as without this statement except with a better message.\n                invariant(typeof typeSpecs[typeSpecName] === 'function', '%s: %s type `%s` is invalid; it must be a function, usually from ' + 'the `prop-types` package, but received `%s`.', componentName || 'React class', location, typeSpecName, typeof typeSpecs[typeSpecName]);\n                error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);\n              } catch (ex) {\n                error = ex;\n              }\n\n              warning(!error || error instanceof Error, '%s: type specification of %s `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error);\n\n              if (error instanceof Error && !(error.message in loggedTypeFailures)) {\n                // Only monitor this failure once because there tends to be a lot of the\n                // same error.\n                loggedTypeFailures[error.message] = true;\n                var stack = getStack ? getStack() : '';\n                warning(false, 'Failed %s type: %s%s', location, error.message, stack != null ? stack : '');\n              }\n            }\n          }\n        }\n      }\n\n      module.exports = checkPropTypes;\n      /***/\n    },\n    /* 23 */\n\n    /*!*************************************!*\\\n      !*** ./src/NewPasswordRequired.jsx ***!\n      \\*************************************/\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      'use strict';\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.NewPasswordRequired = undefined;\n\n      var _react = __webpack_require__(\n      /*! react */\n      12);\n\n      var _react2 = _interopRequireDefault(_react);\n\n      var _reactRedux = __webpack_require__(\n      /*! react-redux */\n      13);\n\n      var _actions = __webpack_require__(\n      /*! ./actions */\n      4);\n\n      function _interopRequireDefault(obj) {\n        return obj && obj.__esModule ? obj : {\n          default: obj\n        };\n      }\n\n      var BaseNewPasswordRequired = function BaseNewPasswordRequired(props) {\n        return _react2.default.cloneElement(props.children, {\n          error: props.error,\n          onSubmit: props.onSubmit\n        });\n      };\n\n      var setNewPassword = function setNewPassword(password, user, config, userAttributes, dispatch) {\n        return new Promise(function (resolve, reject) {\n          user.completeNewPasswordChallenge(password, userAttributes, {\n            onSuccess: function onSuccess() {\n              dispatch(_actions.Action.authenticated(user));\n              resolve();\n            },\n            onFailure: function onFailure(error) {\n              dispatch(_actions.Action.newPasswordRequiredFailure(user, error.message));\n              reject(error);\n            },\n            mfaRequired: function mfaRequired() {\n              dispatch(_actions.Action.mfaRequired(user));\n              resolve();\n            },\n            newPasswordRequired: function newPasswordRequired() {\n              dispatch(_actions.Action.newPasswordRequired(user));\n              resolve();\n            }\n          });\n        });\n      };\n\n      var mapStateToProps = function mapStateToProps(state) {\n        return {\n          error: state.cognito.error,\n          user: state.cognito.user,\n          config: state.cognito.config\n        };\n      };\n\n      var mapDispatchToProps = function mapDispatchToProps(dispatch) {\n        return {\n          setNewPasswordPartial: function setNewPasswordPartial(password, user, config, userAttributes) {\n            return setNewPassword(password, user, config, userAttributes, dispatch);\n          }\n        };\n      };\n\n      var mergeProps = function mergeProps(stateProps, dispatchProps, ownProps) {\n        return Object.assign({}, ownProps, stateProps, {\n          onSubmit: function onSubmit(password, userAttributes) {\n            return dispatchProps.setNewPasswordPartial(password, stateProps.user, stateProps.config, userAttributes);\n          }\n        });\n      };\n      /**\n       * Wrapper for a New Password Required form\n       *\n       * Magically provides the following props to the wrapped element:\n       *\n       * * user - the Cognito user\n       * * error - the persistent react-cognito error message\n       * * onSubmit - a handler that calls the Set New Password API\n       *\n       * @example\n       *\n       * <NewPasswordRequired>\n       *   <NewPasswordRequiredForm />\n       * </NewPasswordRequired>\n       */\n\n\n      var NewPasswordRequired = exports.NewPasswordRequired = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps, mergeProps)(BaseNewPasswordRequired);\n      /***/\n    },\n    /* 24 */\n\n    /*!***********************************!*\\\n      !*** ./src/EmailVerification.jsx ***!\n      \\***********************************/\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      'use strict';\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.EmailVerification = exports.verifyEmail = undefined;\n\n      var _react = __webpack_require__(\n      /*! react */\n      12);\n\n      var _react2 = _interopRequireDefault(_react);\n\n      var _reactRedux = __webpack_require__(\n      /*! react-redux */\n      13);\n\n      var _actions = __webpack_require__(\n      /*! ./actions */\n      4);\n\n      function _interopRequireDefault(obj) {\n        return obj && obj.__esModule ? obj : {\n          default: obj\n        };\n      }\n\n      var BaseEmailVerification = function BaseEmailVerification(props) {\n        return _react2.default.cloneElement(props.children, {\n          error: props.error,\n          onSubmit: props.onSubmit,\n          onCancel: props.onCancel\n        });\n      };\n\n      var verifyEmail = exports.verifyEmail = function verifyEmail(verificationCode, user, dispatch) {\n        return new Promise(function (resolve, reject) {\n          user.verifyAttribute('email', verificationCode, {\n            onSuccess: function onSuccess() {\n              dispatch(_actions.Action.login(user));\n              resolve();\n            },\n            inputVerificationCode: function inputVerificationCode() {\n              dispatch(_actions.Action.emailVerificationRequired(user));\n              reject();\n            },\n            onFailure: function onFailure(error) {\n              dispatch(_actions.Action.emailVerificationFailed(user, error.message));\n              reject();\n            }\n          });\n        });\n      };\n\n      var mapStateToProps = function mapStateToProps(state) {\n        return {\n          error: state.cognito.error,\n          user: state.cognito.user\n        };\n      };\n\n      var mapDispatchToProps = function mapDispatchToProps(dispatch) {\n        return {\n          verifyPartial: function verifyPartial(verificationCode, user) {\n            return verifyEmail(verificationCode, user, dispatch);\n          },\n          onCancel: function onCancel() {\n            return dispatch(_actions.Action.logout());\n          }\n        };\n      };\n\n      var mergeProps = function mergeProps(stateProps, dispatchProps, ownProps) {\n        return Object.assign({}, ownProps, stateProps, dispatchProps, {\n          onSubmit: function onSubmit(verificationCode) {\n            return dispatchProps.verifyPartial(verificationCode, stateProps.user);\n          }\n        });\n      };\n      /**\n       * Wrapper for an Email Verification Form.\n       * Magically adds the following props to the contained form:\n       *\n       *  * user - the Cognito user from the Redux store\n       *  * error - the persisted error from the Redux store\n       *  * onSubmit - a handler that calls the Cognito verification API\n       *\n       * @example\n       * <EmailVerification>\n       *   <EmailVerificationForm />\n       * </EmailVerification>\n       *\n       */\n\n\n      var EmailVerification = exports.EmailVerification = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps, mergeProps)(BaseEmailVerification);\n      /***/\n    },\n    /* 25 */\n\n    /*!*******************************!*\\\n      !*** ./src/PasswordReset.jsx ***!\n      \\*******************************/\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      'use strict';\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.PasswordReset = undefined;\n\n      var _react = __webpack_require__(\n      /*! react */\n      12);\n\n      var _react2 = _interopRequireDefault(_react);\n\n      var _reactRedux = __webpack_require__(\n      /*! react-redux */\n      13);\n\n      var _amazonCognitoIdentityJs = __webpack_require__(\n      /*! amazon-cognito-identity-js */\n      2);\n\n      var _actions = __webpack_require__(\n      /*! ./actions */\n      4);\n\n      function _interopRequireDefault(obj) {\n        return obj && obj.__esModule ? obj : {\n          default: obj\n        };\n      }\n\n      var BasePasswordReset = function BasePasswordReset(props) {\n        return _react2.default.cloneElement(props.children, {\n          username: props.username,\n          sendVerificationCode: props.sendVerificationCode,\n          setPassword: props.setPassword\n        });\n      };\n\n      var getUser = function getUser(username, userPool) {\n        var user = new _amazonCognitoIdentityJs.CognitoUser({\n          Username: username,\n          Pool: userPool\n        });\n        return user;\n      };\n\n      var setPassword = function setPassword(username, userPool, code, password, dispatch) {\n        return new Promise(function (resolve, reject) {\n          var user = getUser(username, userPool);\n          user.confirmPassword(code, password, {\n            onSuccess: function onSuccess() {\n              dispatch(_actions.Action.finishPasswordResetFlow()), resolve();\n            },\n            onFailure: function onFailure(err) {\n              dispatch(_actions.Action.beginPasswordResetFlow(user, err.message)), reject(err);\n            }\n          });\n        });\n      };\n\n      var sendVerificationCode = function sendVerificationCode(username, userPool, dispatch) {\n        return new Promise(function (resolve, reject) {\n          var user = getUser(username, userPool);\n          user.forgotPassword({\n            onSuccess: function onSuccess() {\n              dispatch(_actions.Action.continuePasswordResetFlow(user));\n              resolve();\n            },\n            onFailure: function onFailure(err) {\n              dispatch(_actions.Action.beginPasswordResetFlow(user, err.message));\n              reject(err);\n            }\n          });\n        });\n      };\n\n      var mapStateToProps = function mapStateToProps(state) {\n        var props = {\n          user: state.cognito.user,\n          username: '',\n          userPool: state.cognito.userPool\n        };\n\n        if (state.cognito.user != null) {\n          props.username = state.cognito.user.getUsername();\n        }\n\n        return props;\n      };\n\n      var mapDispatchToProps = function mapDispatchToProps(dispatch) {\n        return {\n          sendVerificationCodePartial: function sendVerificationCodePartial(username, userPool) {\n            return sendVerificationCode(username, userPool, dispatch);\n          },\n          setPasswordPartial: function setPasswordPartial(user, userPool, code, password) {\n            return setPassword(user, userPool, code, password, dispatch);\n          }\n        };\n      };\n\n      var mergeProps = function mergeProps(stateProps, dispatchProps, ownProps) {\n        return Object.assign({}, ownProps, stateProps, {\n          sendVerificationCode: function sendVerificationCode(username) {\n            return dispatchProps.sendVerificationCodePartial(username, stateProps.userPool);\n          },\n          setPassword: function setPassword(username, code, password) {\n            return dispatchProps.setPasswordPartial(username, stateProps.userPool, code, password);\n          }\n        });\n      };\n      /**\n       * Container for a Password Reset form\n       *\n       * Magically provides the following props to the wrapped element:\n       *\n       *  * user\n       *  * username\n       *  * sendVerificationCode\n       *  * setPassword\n       *\n       * @example\n       * <PasswordReset>\n       *   <PasswordResetForm />\n       * </PasswordReset>\n       */\n\n\n      var PasswordReset = exports.PasswordReset = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps, mergeProps)(BasePasswordReset);\n      /***/\n    },\n    /* 26 */\n\n    /*!*************************!*\\\n      !*** ./src/Confirm.jsx ***!\n      \\*************************/\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      'use strict';\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.Confirm = undefined;\n\n      var _react = __webpack_require__(\n      /*! react */\n      12);\n\n      var _react2 = _interopRequireDefault(_react);\n\n      var _reactRedux = __webpack_require__(\n      /*! react-redux */\n      13);\n\n      var _actions = __webpack_require__(\n      /*! ./actions */\n      4);\n\n      function _interopRequireDefault(obj) {\n        return obj && obj.__esModule ? obj : {\n          default: obj\n        };\n      }\n\n      var BaseConfirm = function BaseConfirm(props) {\n        return _react2.default.cloneElement(props.children, {\n          error: props.error,\n          onSubmit: props.onSubmit,\n          onResend: props.onResend,\n          onCancel: props.onCancel\n        });\n      };\n\n      var confirm = function confirm(verificationCode, user, dispatch) {\n        return new Promise(function (resolve, reject) {\n          user.confirmRegistration(verificationCode, true, function (error) {\n            if (error) {\n              dispatch(_actions.Action.confirmFailed(user));\n              reject(error.message);\n            } else {\n              dispatch(_actions.Action.partialLogout());\n              resolve(user);\n            }\n          });\n        });\n      };\n\n      var resend = function resend(user, dispatch) {\n        return new Promise(function (resolve, reject) {\n          user.resendConfirmationCode(function (err) {\n            if (err) {\n              dispatch(_actions.Action.confirmationRequired(user));\n              reject(err.message);\n            } else {\n              dispatch(_actions.Action.confirmationRequired(user));\n              resolve(user);\n            }\n          });\n        });\n      };\n\n      var mapStateToProps = function mapStateToProps(state) {\n        return {\n          error: state.cognito.error,\n          user: state.cognito.user\n        };\n      };\n\n      var mapDispatchToProps = function mapDispatchToProps(dispatch) {\n        return {\n          confirmPartial: function confirmPartial(verificationCode, user) {\n            return confirm(verificationCode, user, dispatch);\n          },\n          onCancel: function onCancel() {\n            return dispatch(_actions.Action.logout());\n          },\n          onResendPartial: function onResendPartial(user) {\n            return resend(user, dispatch);\n          }\n        };\n      };\n\n      var mergeProps = function mergeProps(stateProps, dispatchProps, ownProps) {\n        return Object.assign({}, ownProps, stateProps, dispatchProps, {\n          onSubmit: function onSubmit(verificationCode) {\n            return dispatchProps.confirmPartial(verificationCode, stateProps.user);\n          },\n          onResend: function onResend() {\n            return dispatchProps.onResendPartial(stateProps.user);\n          }\n        });\n      };\n      /**\n       * Container for a confirmation form.  Magically adds the following props to the \n       * contained form:\n       *\n       *  * user - the Cognito User from the redux store\n       *  * error - the persisted error from the redux store\n       *  * onSubmit - a handler that calls the Cognito confirm API\n       *  * onResend - a handler that calls the Cognito resend request API\n       *  * onCancel - Logs the user out completely\n       *\n       * @example\n       * <Confirm>\n       *   <ConfirmForm />\n       * </Confirm>\n       *\n       */\n\n\n      var Confirm = exports.Confirm = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps, mergeProps)(BaseConfirm);\n      /***/\n    }\n    /******/\n    ])\n  );\n});\n\n;","map":null,"metadata":{},"sourceType":"script"}